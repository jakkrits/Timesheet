enum _ModelMutationType {
  CREATED
  UPDATED
  DELETED
}

# Meta information about the query.
type _QueryMeta {
  count: Int!
}

type AddToTimesheetOnDocumentPayload {
  timesheetsTimesheet: Timesheet
  documentDocument: Document
}

input AUTH_PROVIDER_EMAIL {
  email: String!
  password: String!
}

input AuthProviderSignupData {
  email: AUTH_PROVIDER_EMAIL
}

enum Branch {
  BAN_KOH
  SAVE_ONE
  KHON_KHAN
}

input CreateDocument {
  branch: Branch
  cellPhone: String
  dateOfBirth: DateTime
  department: Department
  employedDate: DateTime
  idCardNumber: String
  leaveWithoutPay: Int
  leaveWithPay: Int
  savingsAccountID: String
  savingsBank: String
  shift: Shift
  userId: ID
  timesheetsIds: [ID!]
  timesheets: [DocumenttimesheetsTimesheet!]
}

input CreateFile {
  name: String!
}

input CreateTimesheet {
  rating: Int
  remark: String
  timeCode: TimesheetCode
  workday: DateTime
  documentId: ID
  document: TimesheetdocumentDocument
}

input CreateUser {
  firstName: String
  lastName: String
  nickName: String
  picture: String
  role: UserRole
  documentId: ID
  document: UserdocumentDocument
}

scalar DateTime

enum Department {
  SERVER
  KITCHEN
  DISHWASHER
  DAILY
  MANAGER
  OWNER
}

type Document implements Node {
  branch: Branch
  cellPhone: String
  createdAt: DateTime!
  dateOfBirth: DateTime
  department: Department
  employedDate: DateTime
  id: ID!
  idCardNumber: String
  leaveWithoutPay: Int
  leaveWithPay: Int
  savingsAccountID: String
  savingsBank: String
  shift: Shift
  timesheets(filter: TimesheetFilter, orderBy: TimesheetOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Timesheet!]
  updatedAt: DateTime!
  user(filter: UserFilter): User

  # Meta information about the query.
  _timesheetsMeta(filter: TimesheetFilter, orderBy: TimesheetOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input DocumentFilter {
  # Logical AND on all given filters.
  AND: [DocumentFilter!]

  # Logical OR on all given filters.
  OR: [DocumentFilter!]
  branch: Branch

  # All values that are not equal to given value.
  branch_not: Branch

  # All values that are contained in given list.
  branch_in: [Branch!]

  # All values that are not contained in given list.
  branch_not_in: [Branch!]
  cellPhone: String

  # All values that are not equal to given value.
  cellPhone_not: String

  # All values that are contained in given list.
  cellPhone_in: [String!]

  # All values that are not contained in given list.
  cellPhone_not_in: [String!]

  # All values less than the given value.
  cellPhone_lt: String

  # All values less than or equal the given value.
  cellPhone_lte: String

  # All values greater than the given value.
  cellPhone_gt: String

  # All values greater than or equal the given value.
  cellPhone_gte: String

  # All values containing the given string.
  cellPhone_contains: String

  # All values not containing the given string.
  cellPhone_not_contains: String

  # All values starting with the given string.
  cellPhone_starts_with: String

  # All values not starting with the given string.
  cellPhone_not_starts_with: String

  # All values ending with the given string.
  cellPhone_ends_with: String

  # All values not ending with the given string.
  cellPhone_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dateOfBirth: DateTime

  # All values that are not equal to given value.
  dateOfBirth_not: DateTime

  # All values that are contained in given list.
  dateOfBirth_in: [DateTime!]

  # All values that are not contained in given list.
  dateOfBirth_not_in: [DateTime!]

  # All values less than the given value.
  dateOfBirth_lt: DateTime

  # All values less than or equal the given value.
  dateOfBirth_lte: DateTime

  # All values greater than the given value.
  dateOfBirth_gt: DateTime

  # All values greater than or equal the given value.
  dateOfBirth_gte: DateTime
  department: Department

  # All values that are not equal to given value.
  department_not: Department

  # All values that are contained in given list.
  department_in: [Department!]

  # All values that are not contained in given list.
  department_not_in: [Department!]
  employedDate: DateTime

  # All values that are not equal to given value.
  employedDate_not: DateTime

  # All values that are contained in given list.
  employedDate_in: [DateTime!]

  # All values that are not contained in given list.
  employedDate_not_in: [DateTime!]

  # All values less than the given value.
  employedDate_lt: DateTime

  # All values less than or equal the given value.
  employedDate_lte: DateTime

  # All values greater than the given value.
  employedDate_gt: DateTime

  # All values greater than or equal the given value.
  employedDate_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  idCardNumber: String

  # All values that are not equal to given value.
  idCardNumber_not: String

  # All values that are contained in given list.
  idCardNumber_in: [String!]

  # All values that are not contained in given list.
  idCardNumber_not_in: [String!]

  # All values less than the given value.
  idCardNumber_lt: String

  # All values less than or equal the given value.
  idCardNumber_lte: String

  # All values greater than the given value.
  idCardNumber_gt: String

  # All values greater than or equal the given value.
  idCardNumber_gte: String

  # All values containing the given string.
  idCardNumber_contains: String

  # All values not containing the given string.
  idCardNumber_not_contains: String

  # All values starting with the given string.
  idCardNumber_starts_with: String

  # All values not starting with the given string.
  idCardNumber_not_starts_with: String

  # All values ending with the given string.
  idCardNumber_ends_with: String

  # All values not ending with the given string.
  idCardNumber_not_ends_with: String
  leaveWithoutPay: Int

  # All values that are not equal to given value.
  leaveWithoutPay_not: Int

  # All values that are contained in given list.
  leaveWithoutPay_in: [Int!]

  # All values that are not contained in given list.
  leaveWithoutPay_not_in: [Int!]

  # All values less than the given value.
  leaveWithoutPay_lt: Int

  # All values less than or equal the given value.
  leaveWithoutPay_lte: Int

  # All values greater than the given value.
  leaveWithoutPay_gt: Int

  # All values greater than or equal the given value.
  leaveWithoutPay_gte: Int
  leaveWithPay: Int

  # All values that are not equal to given value.
  leaveWithPay_not: Int

  # All values that are contained in given list.
  leaveWithPay_in: [Int!]

  # All values that are not contained in given list.
  leaveWithPay_not_in: [Int!]

  # All values less than the given value.
  leaveWithPay_lt: Int

  # All values less than or equal the given value.
  leaveWithPay_lte: Int

  # All values greater than the given value.
  leaveWithPay_gt: Int

  # All values greater than or equal the given value.
  leaveWithPay_gte: Int
  savingsAccountID: String

  # All values that are not equal to given value.
  savingsAccountID_not: String

  # All values that are contained in given list.
  savingsAccountID_in: [String!]

  # All values that are not contained in given list.
  savingsAccountID_not_in: [String!]

  # All values less than the given value.
  savingsAccountID_lt: String

  # All values less than or equal the given value.
  savingsAccountID_lte: String

  # All values greater than the given value.
  savingsAccountID_gt: String

  # All values greater than or equal the given value.
  savingsAccountID_gte: String

  # All values containing the given string.
  savingsAccountID_contains: String

  # All values not containing the given string.
  savingsAccountID_not_contains: String

  # All values starting with the given string.
  savingsAccountID_starts_with: String

  # All values not starting with the given string.
  savingsAccountID_not_starts_with: String

  # All values ending with the given string.
  savingsAccountID_ends_with: String

  # All values not ending with the given string.
  savingsAccountID_not_ends_with: String
  savingsBank: String

  # All values that are not equal to given value.
  savingsBank_not: String

  # All values that are contained in given list.
  savingsBank_in: [String!]

  # All values that are not contained in given list.
  savingsBank_not_in: [String!]

  # All values less than the given value.
  savingsBank_lt: String

  # All values less than or equal the given value.
  savingsBank_lte: String

  # All values greater than the given value.
  savingsBank_gt: String

  # All values greater than or equal the given value.
  savingsBank_gte: String

  # All values containing the given string.
  savingsBank_contains: String

  # All values not containing the given string.
  savingsBank_not_contains: String

  # All values starting with the given string.
  savingsBank_starts_with: String

  # All values not starting with the given string.
  savingsBank_not_starts_with: String

  # All values ending with the given string.
  savingsBank_ends_with: String

  # All values not ending with the given string.
  savingsBank_not_ends_with: String
  shift: Shift

  # All values that are not equal to given value.
  shift_not: Shift

  # All values that are contained in given list.
  shift_in: [Shift!]

  # All values that are not contained in given list.
  shift_not_in: [Shift!]
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  timesheets_every: TimesheetFilter
  timesheets_some: TimesheetFilter
  timesheets_none: TimesheetFilter
  user: UserFilter
}

enum DocumentOrderBy {
  branch_ASC
  branch_DESC
  cellPhone_ASC
  cellPhone_DESC
  createdAt_ASC
  createdAt_DESC
  dateOfBirth_ASC
  dateOfBirth_DESC
  department_ASC
  department_DESC
  employedDate_ASC
  employedDate_DESC
  id_ASC
  id_DESC
  idCardNumber_ASC
  idCardNumber_DESC
  leaveWithoutPay_ASC
  leaveWithoutPay_DESC
  leaveWithPay_ASC
  leaveWithPay_DESC
  savingsAccountID_ASC
  savingsAccountID_DESC
  savingsBank_ASC
  savingsBank_DESC
  shift_ASC
  shift_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DocumentPreviousValues {
  branch: Branch
  cellPhone: String
  createdAt: DateTime!
  dateOfBirth: DateTime
  department: Department
  employedDate: DateTime
  id: ID!
  idCardNumber: String
  leaveWithoutPay: Int
  leaveWithPay: Int
  savingsAccountID: String
  savingsBank: String
  shift: Shift
  updatedAt: DateTime!
}

input DocumentSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [DocumentSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [DocumentSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: DocumentSubscriptionFilterNode
}

input DocumentSubscriptionFilterNode {
  branch: Branch

  # All values that are not equal to given value.
  branch_not: Branch

  # All values that are contained in given list.
  branch_in: [Branch!]

  # All values that are not contained in given list.
  branch_not_in: [Branch!]
  cellPhone: String

  # All values that are not equal to given value.
  cellPhone_not: String

  # All values that are contained in given list.
  cellPhone_in: [String!]

  # All values that are not contained in given list.
  cellPhone_not_in: [String!]

  # All values less than the given value.
  cellPhone_lt: String

  # All values less than or equal the given value.
  cellPhone_lte: String

  # All values greater than the given value.
  cellPhone_gt: String

  # All values greater than or equal the given value.
  cellPhone_gte: String

  # All values containing the given string.
  cellPhone_contains: String

  # All values not containing the given string.
  cellPhone_not_contains: String

  # All values starting with the given string.
  cellPhone_starts_with: String

  # All values not starting with the given string.
  cellPhone_not_starts_with: String

  # All values ending with the given string.
  cellPhone_ends_with: String

  # All values not ending with the given string.
  cellPhone_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dateOfBirth: DateTime

  # All values that are not equal to given value.
  dateOfBirth_not: DateTime

  # All values that are contained in given list.
  dateOfBirth_in: [DateTime!]

  # All values that are not contained in given list.
  dateOfBirth_not_in: [DateTime!]

  # All values less than the given value.
  dateOfBirth_lt: DateTime

  # All values less than or equal the given value.
  dateOfBirth_lte: DateTime

  # All values greater than the given value.
  dateOfBirth_gt: DateTime

  # All values greater than or equal the given value.
  dateOfBirth_gte: DateTime
  department: Department

  # All values that are not equal to given value.
  department_not: Department

  # All values that are contained in given list.
  department_in: [Department!]

  # All values that are not contained in given list.
  department_not_in: [Department!]
  employedDate: DateTime

  # All values that are not equal to given value.
  employedDate_not: DateTime

  # All values that are contained in given list.
  employedDate_in: [DateTime!]

  # All values that are not contained in given list.
  employedDate_not_in: [DateTime!]

  # All values less than the given value.
  employedDate_lt: DateTime

  # All values less than or equal the given value.
  employedDate_lte: DateTime

  # All values greater than the given value.
  employedDate_gt: DateTime

  # All values greater than or equal the given value.
  employedDate_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  idCardNumber: String

  # All values that are not equal to given value.
  idCardNumber_not: String

  # All values that are contained in given list.
  idCardNumber_in: [String!]

  # All values that are not contained in given list.
  idCardNumber_not_in: [String!]

  # All values less than the given value.
  idCardNumber_lt: String

  # All values less than or equal the given value.
  idCardNumber_lte: String

  # All values greater than the given value.
  idCardNumber_gt: String

  # All values greater than or equal the given value.
  idCardNumber_gte: String

  # All values containing the given string.
  idCardNumber_contains: String

  # All values not containing the given string.
  idCardNumber_not_contains: String

  # All values starting with the given string.
  idCardNumber_starts_with: String

  # All values not starting with the given string.
  idCardNumber_not_starts_with: String

  # All values ending with the given string.
  idCardNumber_ends_with: String

  # All values not ending with the given string.
  idCardNumber_not_ends_with: String
  leaveWithoutPay: Int

  # All values that are not equal to given value.
  leaveWithoutPay_not: Int

  # All values that are contained in given list.
  leaveWithoutPay_in: [Int!]

  # All values that are not contained in given list.
  leaveWithoutPay_not_in: [Int!]

  # All values less than the given value.
  leaveWithoutPay_lt: Int

  # All values less than or equal the given value.
  leaveWithoutPay_lte: Int

  # All values greater than the given value.
  leaveWithoutPay_gt: Int

  # All values greater than or equal the given value.
  leaveWithoutPay_gte: Int
  leaveWithPay: Int

  # All values that are not equal to given value.
  leaveWithPay_not: Int

  # All values that are contained in given list.
  leaveWithPay_in: [Int!]

  # All values that are not contained in given list.
  leaveWithPay_not_in: [Int!]

  # All values less than the given value.
  leaveWithPay_lt: Int

  # All values less than or equal the given value.
  leaveWithPay_lte: Int

  # All values greater than the given value.
  leaveWithPay_gt: Int

  # All values greater than or equal the given value.
  leaveWithPay_gte: Int
  savingsAccountID: String

  # All values that are not equal to given value.
  savingsAccountID_not: String

  # All values that are contained in given list.
  savingsAccountID_in: [String!]

  # All values that are not contained in given list.
  savingsAccountID_not_in: [String!]

  # All values less than the given value.
  savingsAccountID_lt: String

  # All values less than or equal the given value.
  savingsAccountID_lte: String

  # All values greater than the given value.
  savingsAccountID_gt: String

  # All values greater than or equal the given value.
  savingsAccountID_gte: String

  # All values containing the given string.
  savingsAccountID_contains: String

  # All values not containing the given string.
  savingsAccountID_not_contains: String

  # All values starting with the given string.
  savingsAccountID_starts_with: String

  # All values not starting with the given string.
  savingsAccountID_not_starts_with: String

  # All values ending with the given string.
  savingsAccountID_ends_with: String

  # All values not ending with the given string.
  savingsAccountID_not_ends_with: String
  savingsBank: String

  # All values that are not equal to given value.
  savingsBank_not: String

  # All values that are contained in given list.
  savingsBank_in: [String!]

  # All values that are not contained in given list.
  savingsBank_not_in: [String!]

  # All values less than the given value.
  savingsBank_lt: String

  # All values less than or equal the given value.
  savingsBank_lte: String

  # All values greater than the given value.
  savingsBank_gt: String

  # All values greater than or equal the given value.
  savingsBank_gte: String

  # All values containing the given string.
  savingsBank_contains: String

  # All values not containing the given string.
  savingsBank_not_contains: String

  # All values starting with the given string.
  savingsBank_starts_with: String

  # All values not starting with the given string.
  savingsBank_not_starts_with: String

  # All values ending with the given string.
  savingsBank_ends_with: String

  # All values not ending with the given string.
  savingsBank_not_ends_with: String
  shift: Shift

  # All values that are not equal to given value.
  shift_not: Shift

  # All values that are contained in given list.
  shift_in: [Shift!]

  # All values that are not contained in given list.
  shift_not_in: [Shift!]
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  timesheets_every: TimesheetFilter
  timesheets_some: TimesheetFilter
  timesheets_none: TimesheetFilter
  user: UserFilter
}

type DocumentSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Document
  updatedFields: [String!]
  previousValues: DocumentPreviousValues
}

input DocumenttimesheetsTimesheet {
  rating: Int
  remark: String
  timeCode: TimesheetCode
  workday: DateTime
}

type File implements Node {
  contentType: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  secret: String!
  size: Int!
  updatedAt: DateTime!
  url: String!
}

input FileFilter {
  # Logical AND on all given filters.
  AND: [FileFilter!]

  # Logical OR on all given filters.
  OR: [FileFilter!]
  contentType: String

  # All values that are not equal to given value.
  contentType_not: String

  # All values that are contained in given list.
  contentType_in: [String!]

  # All values that are not contained in given list.
  contentType_not_in: [String!]

  # All values less than the given value.
  contentType_lt: String

  # All values less than or equal the given value.
  contentType_lte: String

  # All values greater than the given value.
  contentType_gt: String

  # All values greater than or equal the given value.
  contentType_gte: String

  # All values containing the given string.
  contentType_contains: String

  # All values not containing the given string.
  contentType_not_contains: String

  # All values starting with the given string.
  contentType_starts_with: String

  # All values not starting with the given string.
  contentType_not_starts_with: String

  # All values ending with the given string.
  contentType_ends_with: String

  # All values not ending with the given string.
  contentType_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  secret: String

  # All values that are not equal to given value.
  secret_not: String

  # All values that are contained in given list.
  secret_in: [String!]

  # All values that are not contained in given list.
  secret_not_in: [String!]

  # All values less than the given value.
  secret_lt: String

  # All values less than or equal the given value.
  secret_lte: String

  # All values greater than the given value.
  secret_gt: String

  # All values greater than or equal the given value.
  secret_gte: String

  # All values containing the given string.
  secret_contains: String

  # All values not containing the given string.
  secret_not_contains: String

  # All values starting with the given string.
  secret_starts_with: String

  # All values not starting with the given string.
  secret_not_starts_with: String

  # All values ending with the given string.
  secret_ends_with: String

  # All values not ending with the given string.
  secret_not_ends_with: String
  size: Int

  # All values that are not equal to given value.
  size_not: Int

  # All values that are contained in given list.
  size_in: [Int!]

  # All values that are not contained in given list.
  size_not_in: [Int!]

  # All values less than the given value.
  size_lt: Int

  # All values less than or equal the given value.
  size_lte: Int

  # All values greater than the given value.
  size_gt: Int

  # All values greater than or equal the given value.
  size_gte: Int
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  url: String

  # All values that are not equal to given value.
  url_not: String

  # All values that are contained in given list.
  url_in: [String!]

  # All values that are not contained in given list.
  url_not_in: [String!]

  # All values less than the given value.
  url_lt: String

  # All values less than or equal the given value.
  url_lte: String

  # All values greater than the given value.
  url_gt: String

  # All values greater than or equal the given value.
  url_gte: String

  # All values containing the given string.
  url_contains: String

  # All values not containing the given string.
  url_not_contains: String

  # All values starting with the given string.
  url_starts_with: String

  # All values not starting with the given string.
  url_not_starts_with: String

  # All values ending with the given string.
  url_ends_with: String

  # All values not ending with the given string.
  url_not_ends_with: String
}

enum FileOrderBy {
  contentType_ASC
  contentType_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  secret_ASC
  secret_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

type FilePreviousValues {
  contentType: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  secret: String!
  size: Int!
  updatedAt: DateTime!
  url: String!
}

input FileSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [FileSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [FileSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: FileSubscriptionFilterNode
}

input FileSubscriptionFilterNode {
  contentType: String

  # All values that are not equal to given value.
  contentType_not: String

  # All values that are contained in given list.
  contentType_in: [String!]

  # All values that are not contained in given list.
  contentType_not_in: [String!]

  # All values less than the given value.
  contentType_lt: String

  # All values less than or equal the given value.
  contentType_lte: String

  # All values greater than the given value.
  contentType_gt: String

  # All values greater than or equal the given value.
  contentType_gte: String

  # All values containing the given string.
  contentType_contains: String

  # All values not containing the given string.
  contentType_not_contains: String

  # All values starting with the given string.
  contentType_starts_with: String

  # All values not starting with the given string.
  contentType_not_starts_with: String

  # All values ending with the given string.
  contentType_ends_with: String

  # All values not ending with the given string.
  contentType_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  secret: String

  # All values that are not equal to given value.
  secret_not: String

  # All values that are contained in given list.
  secret_in: [String!]

  # All values that are not contained in given list.
  secret_not_in: [String!]

  # All values less than the given value.
  secret_lt: String

  # All values less than or equal the given value.
  secret_lte: String

  # All values greater than the given value.
  secret_gt: String

  # All values greater than or equal the given value.
  secret_gte: String

  # All values containing the given string.
  secret_contains: String

  # All values not containing the given string.
  secret_not_contains: String

  # All values starting with the given string.
  secret_starts_with: String

  # All values not starting with the given string.
  secret_not_starts_with: String

  # All values ending with the given string.
  secret_ends_with: String

  # All values not ending with the given string.
  secret_not_ends_with: String
  size: Int

  # All values that are not equal to given value.
  size_not: Int

  # All values that are contained in given list.
  size_in: [Int!]

  # All values that are not contained in given list.
  size_not_in: [Int!]

  # All values less than the given value.
  size_lt: Int

  # All values less than or equal the given value.
  size_lte: Int

  # All values greater than the given value.
  size_gt: Int

  # All values greater than or equal the given value.
  size_gte: Int
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  url: String

  # All values that are not equal to given value.
  url_not: String

  # All values that are contained in given list.
  url_in: [String!]

  # All values that are not contained in given list.
  url_not_in: [String!]

  # All values less than the given value.
  url_lt: String

  # All values less than or equal the given value.
  url_lte: String

  # All values greater than the given value.
  url_gt: String

  # All values greater than or equal the given value.
  url_gte: String

  # All values containing the given string.
  url_contains: String

  # All values not containing the given string.
  url_not_contains: String

  # All values starting with the given string.
  url_starts_with: String

  # All values not starting with the given string.
  url_not_starts_with: String

  # All values ending with the given string.
  url_ends_with: String

  # All values not ending with the given string.
  url_not_ends_with: String
}

type FileSubscriptionPayload {
  mutation: _ModelMutationType!
  node: File
  updatedFields: [String!]
  previousValues: FilePreviousValues
}

type Mutation {
  createDocument(branch: Branch, cellPhone: String, dateOfBirth: DateTime, department: Department, employedDate: DateTime, idCardNumber: String, leaveWithoutPay: Int, leaveWithPay: Int, savingsAccountID: String, savingsBank: String, shift: Shift, userId: ID, timesheetsIds: [ID!], timesheets: [DocumenttimesheetsTimesheet!]): Document
  createFile(name: String!): File
  createTimesheet(rating: Int, remark: String, timeCode: TimesheetCode, workday: DateTime, documentId: ID, document: TimesheetdocumentDocument): Timesheet
  updateDocument(branch: Branch, cellPhone: String, dateOfBirth: DateTime, department: Department, employedDate: DateTime, id: ID!, idCardNumber: String, leaveWithoutPay: Int, leaveWithPay: Int, savingsAccountID: String, savingsBank: String, shift: Shift, userId: ID, timesheetsIds: [ID!], timesheets: [DocumenttimesheetsTimesheet!]): Document
  updateFile(id: ID!, name: String): File
  updateTimesheet(id: ID!, rating: Int, remark: String, timeCode: TimesheetCode, workday: DateTime, documentId: ID, document: TimesheetdocumentDocument): Timesheet
  updateUser(firstName: String, id: ID!, lastName: String, nickName: String, picture: String, role: UserRole, documentId: ID, document: UserdocumentDocument): User
  updateOrCreateDocument(update: UpdateDocument!, create: CreateDocument!): Document
  updateOrCreateFile(update: UpdateFile!, create: CreateFile!): File
  updateOrCreateTimesheet(update: UpdateTimesheet!, create: CreateTimesheet!): Timesheet
  updateOrCreateUser(update: UpdateUser!, create: CreateUser!): User
  deleteDocument(id: ID!): Document
  deleteFile(id: ID!): File
  deleteTimesheet(id: ID!): Timesheet
  deleteUser(id: ID!): User
  setDocumentOwner(userUserId: ID!, documentDocumentId: ID!): SetDocumentOwnerPayload
  unsetDocumentOwner(userUserId: ID!, documentDocumentId: ID!): UnsetDocumentOwnerPayload
  addToTimesheetOnDocument(documentDocumentId: ID!, timesheetsTimesheetId: ID!): AddToTimesheetOnDocumentPayload
  removeFromTimesheetOnDocument(documentDocumentId: ID!, timesheetsTimesheetId: ID!): RemoveFromTimesheetOnDocumentPayload
  signinUser(email: AUTH_PROVIDER_EMAIL): SigninPayload!
  createUser(firstName: String, lastName: String, nickName: String, picture: String, role: UserRole, documentId: ID, document: UserdocumentDocument, authProvider: AuthProviderSignupData!): User
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

type Query {
  allDocuments(filter: DocumentFilter, orderBy: DocumentOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Document!]!
  allFiles(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [File!]!
  allTimesheets(filter: TimesheetFilter, orderBy: TimesheetOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Timesheet!]!
  allUsers(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [User!]!
  _allDocumentsMeta(filter: DocumentFilter, orderBy: DocumentOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allFilesMeta(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allTimesheetsMeta(filter: TimesheetFilter, orderBy: TimesheetOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allUsersMeta(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  Document(id: ID): Document
  File(id: ID, secret: String, url: String): File
  Timesheet(id: ID): Timesheet
  User(email: String, id: ID): User
  user: User

  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
}

type RemoveFromTimesheetOnDocumentPayload {
  timesheetsTimesheet: Timesheet
  documentDocument: Document
}

type SetDocumentOwnerPayload {
  documentDocument: Document
  userUser: User
}

enum Shift {
  MORNING
  MID
  GRAVEYARD
}

# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.
type SigninPayload {
  token: String
  user: User
}

type Subscription {
  Document(filter: DocumentSubscriptionFilter): DocumentSubscriptionPayload
  File(filter: FileSubscriptionFilter): FileSubscriptionPayload
  Timesheet(filter: TimesheetSubscriptionFilter): TimesheetSubscriptionPayload
  User(filter: UserSubscriptionFilter): UserSubscriptionPayload
}

type Timesheet implements Node {
  createdAt: DateTime!
  document(filter: DocumentFilter): Document
  id: ID!
  rating: Int
  remark: String
  timeCode: TimesheetCode
  updatedAt: DateTime!
  workday: DateTime
}

enum TimesheetCode {
  R
  OT
  H
  H1
  V
  L
  L1
  S
  S1
  A
  A1
}

input TimesheetdocumentDocument {
  branch: Branch
  cellPhone: String
  dateOfBirth: DateTime
  department: Department
  employedDate: DateTime
  idCardNumber: String
  leaveWithoutPay: Int
  leaveWithPay: Int
  savingsAccountID: String
  savingsBank: String
  shift: Shift
  userId: ID
  timesheetsIds: [ID!]
  timesheets: [DocumenttimesheetsTimesheet!]
}

input TimesheetFilter {
  # Logical AND on all given filters.
  AND: [TimesheetFilter!]

  # Logical OR on all given filters.
  OR: [TimesheetFilter!]
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  rating: Int

  # All values that are not equal to given value.
  rating_not: Int

  # All values that are contained in given list.
  rating_in: [Int!]

  # All values that are not contained in given list.
  rating_not_in: [Int!]

  # All values less than the given value.
  rating_lt: Int

  # All values less than or equal the given value.
  rating_lte: Int

  # All values greater than the given value.
  rating_gt: Int

  # All values greater than or equal the given value.
  rating_gte: Int
  remark: String

  # All values that are not equal to given value.
  remark_not: String

  # All values that are contained in given list.
  remark_in: [String!]

  # All values that are not contained in given list.
  remark_not_in: [String!]

  # All values less than the given value.
  remark_lt: String

  # All values less than or equal the given value.
  remark_lte: String

  # All values greater than the given value.
  remark_gt: String

  # All values greater than or equal the given value.
  remark_gte: String

  # All values containing the given string.
  remark_contains: String

  # All values not containing the given string.
  remark_not_contains: String

  # All values starting with the given string.
  remark_starts_with: String

  # All values not starting with the given string.
  remark_not_starts_with: String

  # All values ending with the given string.
  remark_ends_with: String

  # All values not ending with the given string.
  remark_not_ends_with: String
  timeCode: TimesheetCode

  # All values that are not equal to given value.
  timeCode_not: TimesheetCode

  # All values that are contained in given list.
  timeCode_in: [TimesheetCode!]

  # All values that are not contained in given list.
  timeCode_not_in: [TimesheetCode!]
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  workday: DateTime

  # All values that are not equal to given value.
  workday_not: DateTime

  # All values that are contained in given list.
  workday_in: [DateTime!]

  # All values that are not contained in given list.
  workday_not_in: [DateTime!]

  # All values less than the given value.
  workday_lt: DateTime

  # All values less than or equal the given value.
  workday_lte: DateTime

  # All values greater than the given value.
  workday_gt: DateTime

  # All values greater than or equal the given value.
  workday_gte: DateTime
  document: DocumentFilter
}

enum TimesheetOrderBy {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  rating_ASC
  rating_DESC
  remark_ASC
  remark_DESC
  timeCode_ASC
  timeCode_DESC
  updatedAt_ASC
  updatedAt_DESC
  workday_ASC
  workday_DESC
}

type TimesheetPreviousValues {
  createdAt: DateTime!
  id: ID!
  rating: Int
  remark: String
  timeCode: TimesheetCode
  updatedAt: DateTime!
  workday: DateTime
}

input TimesheetSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [TimesheetSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [TimesheetSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: TimesheetSubscriptionFilterNode
}

input TimesheetSubscriptionFilterNode {
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  rating: Int

  # All values that are not equal to given value.
  rating_not: Int

  # All values that are contained in given list.
  rating_in: [Int!]

  # All values that are not contained in given list.
  rating_not_in: [Int!]

  # All values less than the given value.
  rating_lt: Int

  # All values less than or equal the given value.
  rating_lte: Int

  # All values greater than the given value.
  rating_gt: Int

  # All values greater than or equal the given value.
  rating_gte: Int
  remark: String

  # All values that are not equal to given value.
  remark_not: String

  # All values that are contained in given list.
  remark_in: [String!]

  # All values that are not contained in given list.
  remark_not_in: [String!]

  # All values less than the given value.
  remark_lt: String

  # All values less than or equal the given value.
  remark_lte: String

  # All values greater than the given value.
  remark_gt: String

  # All values greater than or equal the given value.
  remark_gte: String

  # All values containing the given string.
  remark_contains: String

  # All values not containing the given string.
  remark_not_contains: String

  # All values starting with the given string.
  remark_starts_with: String

  # All values not starting with the given string.
  remark_not_starts_with: String

  # All values ending with the given string.
  remark_ends_with: String

  # All values not ending with the given string.
  remark_not_ends_with: String
  timeCode: TimesheetCode

  # All values that are not equal to given value.
  timeCode_not: TimesheetCode

  # All values that are contained in given list.
  timeCode_in: [TimesheetCode!]

  # All values that are not contained in given list.
  timeCode_not_in: [TimesheetCode!]
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  workday: DateTime

  # All values that are not equal to given value.
  workday_not: DateTime

  # All values that are contained in given list.
  workday_in: [DateTime!]

  # All values that are not contained in given list.
  workday_not_in: [DateTime!]

  # All values less than the given value.
  workday_lt: DateTime

  # All values less than or equal the given value.
  workday_lte: DateTime

  # All values greater than the given value.
  workday_gt: DateTime

  # All values greater than or equal the given value.
  workday_gte: DateTime
  document: DocumentFilter
}

type TimesheetSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Timesheet
  updatedFields: [String!]
  previousValues: TimesheetPreviousValues
}

type UnsetDocumentOwnerPayload {
  documentDocument: Document
  userUser: User
}

input UpdateDocument {
  branch: Branch
  cellPhone: String
  dateOfBirth: DateTime
  department: Department
  employedDate: DateTime
  id: ID!
  idCardNumber: String
  leaveWithoutPay: Int
  leaveWithPay: Int
  savingsAccountID: String
  savingsBank: String
  shift: Shift
  userId: ID
  timesheetsIds: [ID!]
  timesheets: [DocumenttimesheetsTimesheet!]
}

input UpdateFile {
  id: ID!
  name: String
}

input UpdateTimesheet {
  id: ID!
  rating: Int
  remark: String
  timeCode: TimesheetCode
  workday: DateTime
  documentId: ID
  document: TimesheetdocumentDocument
}

input UpdateUser {
  firstName: String
  id: ID!
  lastName: String
  nickName: String
  picture: String
  role: UserRole
  documentId: ID
  document: UserdocumentDocument
}

type User implements Node {
  createdAt: DateTime!
  document(filter: DocumentFilter): Document
  email: String
  firstName: String
  id: ID!
  lastName: String
  nickName: String
  password: String
  picture: String
  role: UserRole
  updatedAt: DateTime!
}

input UserdocumentDocument {
  branch: Branch
  cellPhone: String
  dateOfBirth: DateTime
  department: Department
  employedDate: DateTime
  idCardNumber: String
  leaveWithoutPay: Int
  leaveWithPay: Int
  savingsAccountID: String
  savingsBank: String
  shift: Shift
  timesheetsIds: [ID!]
  timesheets: [DocumenttimesheetsTimesheet!]
}

input UserFilter {
  # Logical AND on all given filters.
  AND: [UserFilter!]

  # Logical OR on all given filters.
  OR: [UserFilter!]
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  firstName: String

  # All values that are not equal to given value.
  firstName_not: String

  # All values that are contained in given list.
  firstName_in: [String!]

  # All values that are not contained in given list.
  firstName_not_in: [String!]

  # All values less than the given value.
  firstName_lt: String

  # All values less than or equal the given value.
  firstName_lte: String

  # All values greater than the given value.
  firstName_gt: String

  # All values greater than or equal the given value.
  firstName_gte: String

  # All values containing the given string.
  firstName_contains: String

  # All values not containing the given string.
  firstName_not_contains: String

  # All values starting with the given string.
  firstName_starts_with: String

  # All values not starting with the given string.
  firstName_not_starts_with: String

  # All values ending with the given string.
  firstName_ends_with: String

  # All values not ending with the given string.
  firstName_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  lastName: String

  # All values that are not equal to given value.
  lastName_not: String

  # All values that are contained in given list.
  lastName_in: [String!]

  # All values that are not contained in given list.
  lastName_not_in: [String!]

  # All values less than the given value.
  lastName_lt: String

  # All values less than or equal the given value.
  lastName_lte: String

  # All values greater than the given value.
  lastName_gt: String

  # All values greater than or equal the given value.
  lastName_gte: String

  # All values containing the given string.
  lastName_contains: String

  # All values not containing the given string.
  lastName_not_contains: String

  # All values starting with the given string.
  lastName_starts_with: String

  # All values not starting with the given string.
  lastName_not_starts_with: String

  # All values ending with the given string.
  lastName_ends_with: String

  # All values not ending with the given string.
  lastName_not_ends_with: String
  nickName: String

  # All values that are not equal to given value.
  nickName_not: String

  # All values that are contained in given list.
  nickName_in: [String!]

  # All values that are not contained in given list.
  nickName_not_in: [String!]

  # All values less than the given value.
  nickName_lt: String

  # All values less than or equal the given value.
  nickName_lte: String

  # All values greater than the given value.
  nickName_gt: String

  # All values greater than or equal the given value.
  nickName_gte: String

  # All values containing the given string.
  nickName_contains: String

  # All values not containing the given string.
  nickName_not_contains: String

  # All values starting with the given string.
  nickName_starts_with: String

  # All values not starting with the given string.
  nickName_not_starts_with: String

  # All values ending with the given string.
  nickName_ends_with: String

  # All values not ending with the given string.
  nickName_not_ends_with: String
  password: String

  # All values that are not equal to given value.
  password_not: String

  # All values that are contained in given list.
  password_in: [String!]

  # All values that are not contained in given list.
  password_not_in: [String!]

  # All values less than the given value.
  password_lt: String

  # All values less than or equal the given value.
  password_lte: String

  # All values greater than the given value.
  password_gt: String

  # All values greater than or equal the given value.
  password_gte: String

  # All values containing the given string.
  password_contains: String

  # All values not containing the given string.
  password_not_contains: String

  # All values starting with the given string.
  password_starts_with: String

  # All values not starting with the given string.
  password_not_starts_with: String

  # All values ending with the given string.
  password_ends_with: String

  # All values not ending with the given string.
  password_not_ends_with: String
  picture: String

  # All values that are not equal to given value.
  picture_not: String

  # All values that are contained in given list.
  picture_in: [String!]

  # All values that are not contained in given list.
  picture_not_in: [String!]

  # All values less than the given value.
  picture_lt: String

  # All values less than or equal the given value.
  picture_lte: String

  # All values greater than the given value.
  picture_gt: String

  # All values greater than or equal the given value.
  picture_gte: String

  # All values containing the given string.
  picture_contains: String

  # All values not containing the given string.
  picture_not_contains: String

  # All values starting with the given string.
  picture_starts_with: String

  # All values not starting with the given string.
  picture_not_starts_with: String

  # All values ending with the given string.
  picture_ends_with: String

  # All values not ending with the given string.
  picture_not_ends_with: String
  role: UserRole

  # All values that are not equal to given value.
  role_not: UserRole

  # All values that are contained in given list.
  role_in: [UserRole!]

  # All values that are not contained in given list.
  role_not_in: [UserRole!]
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  document: DocumentFilter
}

enum UserOrderBy {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  lastName_ASC
  lastName_DESC
  nickName_ASC
  nickName_DESC
  password_ASC
  password_DESC
  picture_ASC
  picture_DESC
  role_ASC
  role_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  createdAt: DateTime!
  email: String
  firstName: String
  id: ID!
  lastName: String
  nickName: String
  password: String
  picture: String
  role: UserRole
  updatedAt: DateTime!
}

enum UserRole {
  ADMIN
  STAFF
  MANAGER
}

input UserSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [UserSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [UserSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: UserSubscriptionFilterNode
}

input UserSubscriptionFilterNode {
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  firstName: String

  # All values that are not equal to given value.
  firstName_not: String

  # All values that are contained in given list.
  firstName_in: [String!]

  # All values that are not contained in given list.
  firstName_not_in: [String!]

  # All values less than the given value.
  firstName_lt: String

  # All values less than or equal the given value.
  firstName_lte: String

  # All values greater than the given value.
  firstName_gt: String

  # All values greater than or equal the given value.
  firstName_gte: String

  # All values containing the given string.
  firstName_contains: String

  # All values not containing the given string.
  firstName_not_contains: String

  # All values starting with the given string.
  firstName_starts_with: String

  # All values not starting with the given string.
  firstName_not_starts_with: String

  # All values ending with the given string.
  firstName_ends_with: String

  # All values not ending with the given string.
  firstName_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  lastName: String

  # All values that are not equal to given value.
  lastName_not: String

  # All values that are contained in given list.
  lastName_in: [String!]

  # All values that are not contained in given list.
  lastName_not_in: [String!]

  # All values less than the given value.
  lastName_lt: String

  # All values less than or equal the given value.
  lastName_lte: String

  # All values greater than the given value.
  lastName_gt: String

  # All values greater than or equal the given value.
  lastName_gte: String

  # All values containing the given string.
  lastName_contains: String

  # All values not containing the given string.
  lastName_not_contains: String

  # All values starting with the given string.
  lastName_starts_with: String

  # All values not starting with the given string.
  lastName_not_starts_with: String

  # All values ending with the given string.
  lastName_ends_with: String

  # All values not ending with the given string.
  lastName_not_ends_with: String
  nickName: String

  # All values that are not equal to given value.
  nickName_not: String

  # All values that are contained in given list.
  nickName_in: [String!]

  # All values that are not contained in given list.
  nickName_not_in: [String!]

  # All values less than the given value.
  nickName_lt: String

  # All values less than or equal the given value.
  nickName_lte: String

  # All values greater than the given value.
  nickName_gt: String

  # All values greater than or equal the given value.
  nickName_gte: String

  # All values containing the given string.
  nickName_contains: String

  # All values not containing the given string.
  nickName_not_contains: String

  # All values starting with the given string.
  nickName_starts_with: String

  # All values not starting with the given string.
  nickName_not_starts_with: String

  # All values ending with the given string.
  nickName_ends_with: String

  # All values not ending with the given string.
  nickName_not_ends_with: String
  password: String

  # All values that are not equal to given value.
  password_not: String

  # All values that are contained in given list.
  password_in: [String!]

  # All values that are not contained in given list.
  password_not_in: [String!]

  # All values less than the given value.
  password_lt: String

  # All values less than or equal the given value.
  password_lte: String

  # All values greater than the given value.
  password_gt: String

  # All values greater than or equal the given value.
  password_gte: String

  # All values containing the given string.
  password_contains: String

  # All values not containing the given string.
  password_not_contains: String

  # All values starting with the given string.
  password_starts_with: String

  # All values not starting with the given string.
  password_not_starts_with: String

  # All values ending with the given string.
  password_ends_with: String

  # All values not ending with the given string.
  password_not_ends_with: String
  picture: String

  # All values that are not equal to given value.
  picture_not: String

  # All values that are contained in given list.
  picture_in: [String!]

  # All values that are not contained in given list.
  picture_not_in: [String!]

  # All values less than the given value.
  picture_lt: String

  # All values less than or equal the given value.
  picture_lte: String

  # All values greater than the given value.
  picture_gt: String

  # All values greater than or equal the given value.
  picture_gte: String

  # All values containing the given string.
  picture_contains: String

  # All values not containing the given string.
  picture_not_contains: String

  # All values starting with the given string.
  picture_starts_with: String

  # All values not starting with the given string.
  picture_not_starts_with: String

  # All values ending with the given string.
  picture_ends_with: String

  # All values not ending with the given string.
  picture_not_ends_with: String
  role: UserRole

  # All values that are not equal to given value.
  role_not: UserRole

  # All values that are contained in given list.
  role_in: [UserRole!]

  # All values that are not contained in given list.
  role_not_in: [UserRole!]
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  document: DocumentFilter
}

type UserSubscriptionPayload {
  mutation: _ModelMutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

